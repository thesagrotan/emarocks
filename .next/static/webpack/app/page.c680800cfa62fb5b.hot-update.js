"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/Blob.ts":
/*!****************************!*\
  !*** ./components/Blob.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* binding */ Blob)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.core.js\");\n\nclass Blob {\n    update(blobs, springTension, canvasWidth, canvasHeight, margin, isRoundedContainer) {\n        const now = Date.now();\n        if (now - this.lastUpdateLogTime > this.logThrottleInterval) {\n            console.log(\"Updating blob\", this);\n            this.lastUpdateLogTime = now;\n        }\n        // Apply velocity to position\n        this.position.add(this.velocity);\n        // Apply damping to velocity\n        this.velocity.multiplyScalar(0.98); // Example damping factor\n        // Keep the blob within canvas bounds\n        const radius = this.size;\n        if (this.position.x - radius < margin || this.position.x + radius > canvasWidth - margin) {\n            this.velocity.x *= -1; // Reverse velocity on X-axis\n            this.position.x = Math.max(margin + radius, Math.min(this.position.x, canvasWidth - margin - radius));\n        }\n        if (this.position.y - radius < margin || this.position.y + radius > canvasHeight - margin) {\n            this.velocity.y *= -1; // Reverse velocity on Y-axis\n            this.position.y = Math.max(margin + radius, Math.min(this.position.y, canvasHeight - margin - radius));\n        }\n        // Interact with other blobs (simple repulsion)\n        blobs.forEach((otherBlob)=>{\n            if (otherBlob === this) return;\n            const distance = this.position.distanceTo(otherBlob.position);\n            const minDistance = this.size + otherBlob.size;\n            if (distance < minDistance) {\n                const overlap = minDistance - distance;\n                const direction = this.position.clone().sub(otherBlob.position).normalize();\n                this.position.add(direction.multiplyScalar(overlap / 2));\n                otherBlob.position.sub(direction.multiplyScalar(overlap / 2));\n            }\n        });\n    }\n    draw(ctx, fillColor, borderColor) {\n        const now = Date.now();\n        if (now - this.lastDrawLogTime > this.logThrottleInterval) {\n            console.log(\"Drawing blob\", this);\n            this.lastDrawLogTime = now;\n        }\n        ctx.beginPath();\n        ctx.arc(this.position.x, this.position.y, this.size, 0, Math.PI * 2);\n        ctx.fillStyle = fillColor;\n        ctx.fill();\n        ctx.strokeStyle = borderColor;\n        ctx.stroke();\n        ctx.closePath();\n    }\n    getSVGPath() {\n        return \"M\".concat(this.position.x, \",\").concat(this.position.y, \" A\").concat(this.size, \",\").concat(this.size, \" 0 1,0 \").concat(this.position.x + 0.1, \",\").concat(this.position.y);\n    }\n    constructor(x, y, size, repelDistance){\n        // Reduce logging frequency in the `update` and `draw` methods\n        this.lastUpdateLogTime = 0;\n        this.lastDrawLogTime = 0;\n        this.logThrottleInterval = 100 // Log every 100ms\n        ;\n        this.position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(x, y);\n        this.velocity = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0);\n        this.size = size;\n        this.type = \"circle\";\n        this.repelDistance = repelDistance;\n        this.centre = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(x, y);\n        this.targetArea = Math.PI * size * size;\n        this.maxRadius = size;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/Blob.ts\n"));

/***/ })

});