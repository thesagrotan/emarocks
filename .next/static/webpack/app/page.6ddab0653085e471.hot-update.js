"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/blob-simulation.tsx":
/*!****************************************!*\
  !*** ./components/blob-simulation.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlobSimulation: () => (/* binding */ BlobSimulation)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Download_Eraser_Pause_Play_Plus_lucide_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=Download,Eraser,Pause,Play,Plus!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/pause.js\");\n/* harmony import */ var _barrel_optimize_names_Download_Eraser_Pause_Play_Plus_lucide_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=Download,Eraser,Pause,Play,Plus!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/play.js\");\n/* harmony import */ var _barrel_optimize_names_Download_Eraser_Pause_Play_Plus_lucide_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=Download,Eraser,Pause,Play,Plus!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/plus.js\");\n/* harmony import */ var _barrel_optimize_names_Download_Eraser_Pause_Play_Plus_lucide_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=Download,Eraser,Pause,Play,Plus!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/eraser.js\");\n/* harmony import */ var _barrel_optimize_names_Download_Eraser_Pause_Play_Plus_lucide_react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! __barrel_optimize__?names=Download,Eraser,Pause,Play,Plus!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/download.js\");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./components/ui/button.tsx\");\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-themes */ \"(app-pages-browser)/./node_modules/next-themes/dist/index.mjs\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.core.js\");\n/* harmony import */ var _blob_simulation_simulation_controls__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./blob-simulation/simulation-controls */ \"(app-pages-browser)/./components/blob-simulation/simulation-controls.tsx\");\n/* harmony import */ var _blob_simulation_blob__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./blob-simulation/blob */ \"(app-pages-browser)/./components/blob-simulation/blob.ts\");\n/* harmony import */ var _blob_simulation_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./blob-simulation/utils */ \"(app-pages-browser)/./components/blob-simulation/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ BlobSimulation auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n// Import refactored components and types\n\n\n\n// Safely access window properties with a function that only runs client-side\nconst getDevicePixelRatio = ()=>{\n    if (true) {\n        return window.devicePixelRatio || 1;\n    }\n    return 1;\n};\n// --- React Component ---\nfunction BlobSimulation() {\n    _s();\n    // --- State ---\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isAnimating, setIsAnimating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isInitialized, setIsInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isMounted, setIsMounted] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isLiveEditing, setIsLiveEditing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const animationFrameIdRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const blobsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const { theme, resolvedTheme } = (0,next_themes__WEBPACK_IMPORTED_MODULE_3__.useTheme)();\n    const currentTheme = resolvedTheme || theme || \"light\";\n    // Simulation parameters as a single state object\n    const [simulationParams, setSimulationParams] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        // Simulation Parameters - Default values\n        shapeCount: 100,\n        edgePointCount: 25,\n        minBlobSize: 10,\n        repelDistance: 15,\n        springTension: 0.2,\n        interactionStrength: 0.015,\n        gravity: 0,\n        damping: 0.98,\n        maxExpansionFactor: 2.5,\n        speed: 1,\n        // Container/Appearance\n        containerMargin: 20,\n        isRoundedContainer: false,\n        showBorder: true,\n        backgroundColor: \"#aac9ca\",\n        darkBackgroundColor: \"#1a2b2f\",\n        blobFillColor: \"#ffffff\",\n        blobFillOpacity: 0.3,\n        darkBlobFillColor: \"#000000\",\n        darkBlobFillOpacity: 0.3,\n        blobBorderColor: \"#466e91\",\n        darkBlobBorderColor: \"#77e4cb\",\n        // Interaction/Tools\n        toolMode: null,\n        // Restricted Area / Static Obstacle\n        restrictedAreaEnabled: true,\n        restrictedAreaShape: 'letter',\n        restrictedAreaSize: 100,\n        restrictedAreaLetter: 'A',\n        restrictedAreaMargin: 30\n    });\n    // --- Handle parameter updates ---\n    const handleParamChange = (key, value)=>{\n        // Set live editing flag if the animation is running and the parameter can be updated on-the-fly\n        const isStructuralParam = key === 'shapeCount' || key === 'edgePointCount' || key === 'minBlobSize';\n        if (isAnimating && !isStructuralParam) {\n            setIsLiveEditing(true);\n            // Clear the flag after a short delay\n            setTimeout(()=>setIsLiveEditing(false), 800);\n            // Immediately update all blobs with the new parameter value if it's relevant\n            if (key === 'repelDistance' && blobsRef.current.length > 0) {\n                blobsRef.current.forEach((blob)=>{\n                    blob.repelDistance = value;\n                });\n            }\n        }\n        setSimulationParams((prev)=>({\n                ...prev,\n                [key]: value\n            }));\n    };\n    // Calculate restricted area params based on state\n    const calculateRestrictedAreaParams = (canvasWidth, canvasHeight)=>{\n        const { restrictedAreaEnabled, restrictedAreaSize, restrictedAreaLetter, restrictedAreaMargin } = simulationParams;\n        if (!restrictedAreaEnabled) return undefined;\n        const centerX = canvasWidth / 2;\n        const centerY = canvasHeight / 2;\n        return {\n            x: centerX - restrictedAreaSize / 2,\n            y: centerY - restrictedAreaSize / 2,\n            size: restrictedAreaSize,\n            margin: restrictedAreaMargin,\n            letter: restrictedAreaLetter\n        };\n    };\n    // Mount detection - crucial for handling browser APIs safely\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BlobSimulation.useEffect\": ()=>{\n            setIsMounted(true);\n            return ({\n                \"BlobSimulation.useEffect\": ()=>setIsMounted(false)\n            })[\"BlobSimulation.useEffect\"];\n        }\n    }[\"BlobSimulation.useEffect\"], []);\n    // --- Effects ---\n    // Only initialize simulation after component is mounted\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BlobSimulation.useEffect\": ()=>{\n            if (!isMounted) return;\n            // Wait a frame to ensure the canvas element is fully ready\n            const timer = setTimeout({\n                \"BlobSimulation.useEffect.timer\": ()=>{\n                    initializeSimulation();\n                    setIsInitialized(true);\n                }\n            }[\"BlobSimulation.useEffect.timer\"], 0);\n            return ({\n                \"BlobSimulation.useEffect\": ()=>{\n                    clearTimeout(timer);\n                    if (animationFrameIdRef.current) cancelAnimationFrame(animationFrameIdRef.current);\n                    animationFrameIdRef.current = null;\n                    blobsRef.current = [];\n                    setIsAnimating(false);\n                }\n            })[\"BlobSimulation.useEffect\"];\n        }\n    }[\"BlobSimulation.useEffect\"], [\n        isMounted\n    ]);\n    // Only restart for structural changes that require re-initialization\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BlobSimulation.useEffect\": ()=>{\n            if (!isInitialized || !isMounted) return;\n            handleRestart();\n        }\n    }[\"BlobSimulation.useEffect\"], [\n        simulationParams.shapeCount,\n        simulationParams.edgePointCount,\n        simulationParams.minBlobSize,\n        isInitialized,\n        isMounted\n    ]);\n    // Update visual appearance without restart\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BlobSimulation.useEffect\": ()=>{\n            if (!isInitialized || !isMounted) return;\n            draw();\n        }\n    }[\"BlobSimulation.useEffect\"], [\n        theme,\n        resolvedTheme,\n        simulationParams.isRoundedContainer,\n        simulationParams.showBorder,\n        simulationParams.containerMargin,\n        simulationParams.backgroundColor,\n        simulationParams.darkBackgroundColor,\n        simulationParams.blobFillColor,\n        simulationParams.blobFillOpacity,\n        simulationParams.darkBlobFillColor,\n        simulationParams.darkBlobFillOpacity,\n        simulationParams.blobBorderColor,\n        simulationParams.darkBlobBorderColor,\n        simulationParams.restrictedAreaEnabled,\n        simulationParams.restrictedAreaShape,\n        simulationParams.restrictedAreaSize,\n        simulationParams.restrictedAreaLetter,\n        isInitialized,\n        isMounted\n    ]);\n    // --- Core Functions ---\n    const initializeSimulation = ()=>{\n        try {\n            console.log(\"Initializing simulation...\");\n            const canvas = canvasRef.current;\n            if (!canvas) {\n                console.warn(\"Canvas ref is not available\");\n                return;\n            }\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) {\n                console.warn(\"Could not get 2D context from canvas\");\n                return;\n            }\n            if (animationFrameIdRef.current) cancelAnimationFrame(animationFrameIdRef.current);\n            setIsAnimating(false);\n            const { shapeCount, edgePointCount, minBlobSize, repelDistance, containerMargin } = simulationParams;\n            const canvasSize = 512;\n            const dpi = getDevicePixelRatio();\n            // Set canvas dimensions\n            canvas.width = canvasSize * dpi;\n            canvas.height = canvasSize * dpi;\n            canvas.style.width = \"\".concat(canvasSize, \"px\");\n            canvas.style.height = \"\".concat(canvasSize, \"px\");\n            ctx.setTransform(dpi, 0, 0, dpi, 0, 0);\n            const logicalWidth = canvasSize - containerMargin;\n            const logicalHeight = canvasSize - containerMargin;\n            const minBlobDist = minBlobSize * 2 + repelDistance;\n            const pdsRestrictedArea = calculateRestrictedAreaParams(logicalWidth, logicalHeight);\n            let points = [];\n            try {\n                points = (0,_blob_simulation_utils__WEBPACK_IMPORTED_MODULE_6__.poissonDiskSampling)(logicalWidth, logicalHeight, minBlobDist, 30, shapeCount, pdsRestrictedArea, minBlobSize);\n            } catch (error) {\n                console.error(\"PDS Error:\", error);\n            }\n            if (points.length < shapeCount) {\n                console.warn(\"PDS Warning: Generated \".concat(points.length, \"/\").concat(shapeCount, \" points.\"));\n            }\n            blobsRef.current = points.map((param)=>{\n                let [x, y] = param;\n                return new _blob_simulation_blob__WEBPACK_IMPORTED_MODULE_5__.Blob(x + containerMargin, y + containerMargin, edgePointCount, minBlobSize, repelDistance);\n            });\n            // Fix any blobs that might be overlapping with the letter\n            if (simulationParams.restrictedAreaEnabled) {\n                fixBlobsOverlappingWithLetter(ctx);\n            }\n            console.log(\"Initialization complete.\");\n            draw();\n        } catch (error) {\n            console.error(\"Error in initializeSimulation:\", error);\n        }\n    };\n    /**\n   * Detect and relocate any blobs that overlap with the letter shape\n   */ const fixBlobsOverlappingWithLetter = (ctx)=>{\n        const canvasWidth = 512;\n        const canvasHeight = 512;\n        const restrictedAreaParams = calculateRestrictedAreaParams(canvasWidth, canvasHeight);\n        if (!restrictedAreaParams || !restrictedAreaParams.letter) return;\n        const letterCenterX = restrictedAreaParams.x + restrictedAreaParams.size / 2;\n        const letterCenterY = restrictedAreaParams.y + restrictedAreaParams.size / 2;\n        const letterSize = restrictedAreaParams.size;\n        const { containerMargin } = simulationParams;\n        // First, check each blob to see if its center or any particles are inside the letter\n        blobsRef.current.forEach((blob, blobIndex)=>{\n            // Quick check if blob center is inside letter\n            const centerInLetter = (0,_blob_simulation_utils__WEBPACK_IMPORTED_MODULE_6__.isPointInLetter)(ctx, restrictedAreaParams.letter, letterCenterX, letterCenterY, letterSize, blob.centre.x, blob.centre.y);\n            // Check if any particles are inside letter (only if center isn't in letter)\n            let anyParticleInLetter = false;\n            if (!centerInLetter) {\n                // Only check particles if center isn't already in letter\n                for (const particle of blob.particles){\n                    if ((0,_blob_simulation_utils__WEBPACK_IMPORTED_MODULE_6__.isPointInLetter)(ctx, restrictedAreaParams.letter, letterCenterX, letterCenterY, letterSize, particle.pos.x, particle.pos.y)) {\n                        anyParticleInLetter = true;\n                        break;\n                    }\n                }\n            }\n            // If blob needs relocation\n            if (centerInLetter || anyParticleInLetter) {\n                console.log(\"Blob \".concat(blobIndex, \" overlaps with letter - relocating\"));\n                // Strategy: Move the blob to a random position outside the restricted area\n                let newX, newY;\n                do {\n                    newX = containerMargin + Math.random() * (canvasWidth - 2 * containerMargin);\n                    newY = containerMargin + Math.random() * (canvasHeight - 2 * containerMargin);\n                }while ((0,_blob_simulation_utils__WEBPACK_IMPORTED_MODULE_6__.isPointInLetter)(ctx, restrictedAreaParams.letter, letterCenterX, letterCenterY, letterSize, newX, newY));\n                // Make sure the new position is within canvas bounds\n                const safeX = Math.max(containerMargin + blob.maxRadius, Math.min(canvasWidth - containerMargin - blob.maxRadius, newX));\n                const safeY = Math.max(containerMargin + blob.maxRadius, Math.min(canvasHeight - containerMargin - blob.maxRadius, newY));\n                // Calculate offset from current to new position\n                const offsetX = safeX - blob.centre.x;\n                const offsetY = safeY - blob.centre.y;\n                // Move all particles by this offset\n                blob.particles.forEach((particle)=>{\n                    particle.pos.x += offsetX;\n                    particle.pos.y += offsetY;\n                });\n                // Update blob center\n                blob.centre.x = safeX;\n                blob.centre.y = safeY;\n            }\n        });\n    };\n    const draw = ()=>{\n        try {\n            const canvas = canvasRef.current;\n            if (!canvas) return;\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) return;\n            const { backgroundColor, darkBackgroundColor, blobFillColor, blobFillOpacity, darkBlobFillColor, darkBlobFillOpacity, blobBorderColor, darkBlobBorderColor, showBorder, containerMargin, isRoundedContainer, restrictedAreaEnabled, restrictedAreaShape } = simulationParams;\n            const colors = {\n                bg: currentTheme === \"dark\" ? darkBackgroundColor : backgroundColor,\n                fg: currentTheme === \"dark\" ? \"#f6fefa\" : \"#04050c\",\n                accent: currentTheme === \"dark\" ? darkBlobBorderColor : blobBorderColor,\n                fill: currentTheme === \"dark\" ? (0,_blob_simulation_utils__WEBPACK_IMPORTED_MODULE_6__.hexToRgba)(darkBlobFillColor, darkBlobFillOpacity) : (0,_blob_simulation_utils__WEBPACK_IMPORTED_MODULE_6__.hexToRgba)(blobFillColor, blobFillOpacity),\n                border: currentTheme === \"dark\" ? darkBlobBorderColor : blobBorderColor,\n                obstacle: currentTheme === \"dark\" ? \"#f87171\" : \"#dc2626\",\n                obstacleText: currentTheme === \"dark\" ? \"#111827\" : \"#ffffff\"\n            };\n            const dpi = getDevicePixelRatio();\n            const canvasWidth = 512;\n            const canvasHeight = 512;\n            // Reset transform and clear canvas\n            ctx.setTransform(dpi, 0, 0, dpi, 0, 0);\n            ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n            ctx.fillStyle = colors.bg;\n            ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n            // Draw container boundary\n            if (showBorder && containerMargin > 0) {\n                ctx.strokeStyle = colors.border;\n                ctx.lineWidth = 1;\n                if (isRoundedContainer) {\n                    const radius = (Math.min(canvasWidth, canvasHeight) - containerMargin * 2) / 2;\n                    const centerX = canvasWidth / 2;\n                    const centerY = canvasHeight / 2;\n                    if (radius > 0) {\n                        ctx.beginPath();\n                        ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\n                        ctx.stroke();\n                    }\n                } else {\n                    ctx.strokeRect(containerMargin, containerMargin, canvasWidth - containerMargin * 2, canvasHeight - containerMargin * 2);\n                }\n            }\n            // Draw static obstacle/restricted area BEFORE blobs (important for visual clarity)\n            const restrictedAreaParams = calculateRestrictedAreaParams(canvasWidth, canvasHeight);\n            if (restrictedAreaEnabled && restrictedAreaParams) {\n                if (restrictedAreaParams.letter) {\n                    // Draw with strong color and larger font for better visibility\n                    ctx.lineWidth = 2;\n                    (0,_blob_simulation_utils__WEBPACK_IMPORTED_MODULE_6__.drawLetter)(ctx, restrictedAreaParams.letter, restrictedAreaParams.x + restrictedAreaParams.size / 2, restrictedAreaParams.y + restrictedAreaParams.size / 2, restrictedAreaParams.size, colors.obstacle);\n                }\n            }\n            // Draw blobs AFTER letter so they appear above it visually\n            blobsRef.current.forEach((blob)=>{\n                if (blob === null || blob === void 0 ? void 0 : blob.draw) blob.draw(ctx, colors.fill, colors.border);\n            });\n        } catch (error) {\n            console.error(\"Error during draw cycle:\", error);\n            if (animationFrameIdRef.current) cancelAnimationFrame(animationFrameIdRef.current);\n            setIsAnimating(false);\n        }\n    };\n    // Rest of the functions remain mostly the same, with added error handling\n    const animate = ()=>{\n        try {\n            if (!canvasRef.current || !isMounted) {\n                setIsAnimating(false);\n                return;\n            }\n            const ctx = canvasRef.current.getContext(\"2d\");\n            if (!ctx) {\n                setIsAnimating(false);\n                return;\n            }\n            // Read the latest parameters on each animation frame\n            // This allows for real-time changes to take effect immediately\n            const { springTension, containerMargin, isRoundedContainer, interactionStrength, maxExpansionFactor, gravity, damping, restrictedAreaEnabled, restrictedAreaShape, speed, repelDistance } = simulationParams;\n            const canvasWidth = 512;\n            const canvasHeight = 512;\n            const restrictedAreaParams = calculateRestrictedAreaParams(canvasWidth, canvasHeight);\n            const shapeType = restrictedAreaEnabled ? restrictedAreaShape : null;\n            const shapeParams = restrictedAreaEnabled && restrictedAreaParams ? restrictedAreaParams : null;\n            // Apply animation speed control - skip frames if speed < 1\n            if (speed < 1 && Math.random() > speed) {\n                // Just request next frame without computing\n                animationFrameIdRef.current = requestAnimationFrame(animate);\n                return;\n            }\n            // --- Update Step ---\n            // For speed > 1, perform multiple updates per frame\n            const iterations = speed > 1 ? Math.min(Math.floor(speed), 3) : 1;\n            for(let i = 0; i < iterations; i++){\n                blobsRef.current.forEach((blob)=>{\n                    if (blob === null || blob === void 0 ? void 0 : blob.update) {\n                        // Update each blob's repelDistance property with current value\n                        blob.repelDistance = repelDistance;\n                        blob.update(blobsRef.current, springTension, canvasWidth, canvasHeight, containerMargin, isRoundedContainer, interactionStrength, maxExpansionFactor, gravity, damping, shapeType, shapeParams, ctx);\n                    }\n                });\n            }\n            // --- Draw Step ---\n            draw();\n            // Request next frame\n            animationFrameIdRef.current = requestAnimationFrame(animate);\n        } catch (error) {\n            console.error(\"Error during animation update:\", error);\n            if (animationFrameIdRef.current) cancelAnimationFrame(animationFrameIdRef.current);\n            setIsAnimating(false);\n        }\n    };\n    // --- Event Handlers ---\n    const toggleAnimation = ()=>{\n        if (!isMounted) return;\n        setIsAnimating((prev)=>{\n            const nextIsAnimating = !prev;\n            if (nextIsAnimating) {\n                console.log(\"Animation starting\");\n                if (animationFrameIdRef.current) cancelAnimationFrame(animationFrameIdRef.current);\n                animationFrameIdRef.current = requestAnimationFrame(animate);\n            } else {\n                console.log(\"Animation stopping\");\n                if (animationFrameIdRef.current) cancelAnimationFrame(animationFrameIdRef.current);\n                animationFrameIdRef.current = null;\n            }\n            return nextIsAnimating;\n        });\n    };\n    const handleRestart = ()=>{\n        if (!isMounted) return;\n        console.log(\"Restarting simulation...\");\n        // Stop animation reliably\n        if (isAnimating) {\n            if (animationFrameIdRef.current) cancelAnimationFrame(animationFrameIdRef.current);\n            animationFrameIdRef.current = null;\n            setIsAnimating(false);\n        }\n        // Clear blobs visually\n        blobsRef.current = [];\n        // Use requestAnimationFrame for the redraw to avoid race conditions\n        if (true) {\n            requestAnimationFrame(()=>{\n                draw(); // Draw empty canvas\n                // Re-initialize after the draw confirms canvas is clear\n                setTimeout(()=>{\n                    initializeSimulation();\n                }, 50);\n            });\n        }\n    };\n    const downloadSVG = ()=>{\n        if (!isMounted) return;\n        try {\n            console.log(\"Generating SVG...\");\n            const { backgroundColor, darkBackgroundColor, blobFillColor, blobFillOpacity, darkBlobFillColor, darkBlobFillOpacity, blobBorderColor, darkBlobBorderColor, showBorder, containerMargin, isRoundedContainer, restrictedAreaEnabled, restrictedAreaShape } = simulationParams;\n            const canvasWidth = 512;\n            const canvasHeight = 512;\n            const colors = {\n                bg: currentTheme === \"dark\" ? darkBackgroundColor : backgroundColor,\n                fill: currentTheme === \"dark\" ? (0,_blob_simulation_utils__WEBPACK_IMPORTED_MODULE_6__.hexToRgba)(darkBlobFillColor, darkBlobFillOpacity) : (0,_blob_simulation_utils__WEBPACK_IMPORTED_MODULE_6__.hexToRgba)(blobFillColor, blobFillOpacity),\n                border: currentTheme === \"dark\" ? darkBlobBorderColor : blobBorderColor,\n                obstacle: currentTheme === \"dark\" ? \"#f87171\" : \"#dc2626\"\n            };\n            let svgContent = '<svg width=\"'.concat(canvasWidth, '\" height=\"').concat(canvasHeight, '\" xmlns=\"http://www.w3.org/2000/svg\" style=\"background-color: ').concat(colors.bg, ';\">');\n            if (showBorder && containerMargin > 0) {\n                const borderAttrs = 'fill=\"none\" stroke=\"'.concat(colors.border, '\" stroke-width=\"1\"');\n                if (isRoundedContainer) {\n                    const radius = (Math.min(canvasWidth, canvasHeight) - containerMargin * 2) / 2;\n                    const centerX = canvasWidth / 2;\n                    const centerY = canvasHeight / 2;\n                    svgContent += '<circle cx=\"'.concat(centerX, '\" cy=\"').concat(centerY, '\" r=\"').concat(radius, '\" ').concat(borderAttrs, \" />\");\n                } else {\n                    svgContent += '<rect x=\"'.concat(containerMargin, '\" y=\"').concat(containerMargin, '\" width=\"').concat(canvasWidth - containerMargin * 2, '\" height=\"').concat(canvasHeight - containerMargin * 2, '\" ').concat(borderAttrs, \" />\");\n                }\n            }\n            blobsRef.current.forEach((blob)=>{\n                if (blob && blob.particles.length > 0) {\n                    const path = blob.getSVGPath();\n                    svgContent += '<path d=\"'.concat(path, '\" fill=\"').concat(colors.fill, '\" stroke=\"').concat(colors.border, '\" stroke-width=\"1\" />');\n                }\n            });\n            const restrictedAreaParams = calculateRestrictedAreaParams(canvasWidth, canvasHeight);\n            if (restrictedAreaEnabled && restrictedAreaParams && restrictedAreaParams.letter) {\n                svgContent += '<text x=\"'.concat(restrictedAreaParams.x + restrictedAreaParams.size / 2, '\" y=\"').concat(restrictedAreaParams.y + restrictedAreaParams.size / 2, '\" font-family=\"Arial\" font-size=\"').concat(restrictedAreaParams.size * 0.8, '\" font-weight=\"bold\" fill=\"').concat(colors.obstacle, '\" text-anchor=\"middle\" dominant-baseline=\"middle\">').concat(restrictedAreaParams.letter, \"</text>\");\n            }\n            svgContent += \"</svg>\";\n            // Use window.Blob to disambiguate from our Blob class\n            const svgBlob = new window.Blob([\n                svgContent\n            ], {\n                type: \"image/svg+xml;charset=utf-8\"\n            });\n            const url = URL.createObjectURL(svgBlob);\n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.download = \"blob-simulation.svg\";\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            URL.revokeObjectURL(url);\n            console.log(\"SVG download initiated.\");\n        } catch (error) {\n            console.error(\"Error downloading SVG:\", error);\n            alert(\"Failed to download SVG. See console for details.\");\n        }\n    };\n    const handleCanvasClick = (event)=>{\n        if (!isMounted) return;\n        try {\n            const canvas = canvasRef.current;\n            const { toolMode, containerMargin, minBlobSize, repelDistance, edgePointCount } = simulationParams;\n            if (!canvas || !toolMode) return;\n            const rect = canvas.getBoundingClientRect();\n            const dpi = getDevicePixelRatio();\n            const scaleX = canvas.width / dpi / rect.width;\n            const scaleY = canvas.height / dpi / rect.height;\n            const x = (event.clientX - rect.left) * scaleX;\n            const y = (event.clientY - rect.top) * scaleY;\n            console.log(\"Canvas click detected (\".concat(toolMode, \") at: \").concat(x.toFixed(1), \", \").concat(y.toFixed(1)));\n            if (toolMode === 'add') {\n                if (x < containerMargin || x > 512 - containerMargin || y < containerMargin || y > 512 - containerMargin) {\n                    console.warn(\"Cannot add shape: click is outside the container margin.\");\n                    return;\n                }\n                const isOverlapping = blobsRef.current.some((blob)=>{\n                    if (!blob || !blob.centre || typeof blob.maxRadius === 'undefined') return false;\n                    const distSq = blob.centre.distanceToSquared(new three__WEBPACK_IMPORTED_MODULE_7__.Vector2(x, y));\n                    const minAllowedDistSq = Math.pow(blob.maxRadius + minBlobSize, 2);\n                    return distSq < minAllowedDistSq;\n                });\n                if (isOverlapping) {\n                    console.warn(\"Cannot add shape: potential overlap with existing shapes.\");\n                    return;\n                }\n                const restrictedParams = calculateRestrictedAreaParams(512, 512);\n                if (simulationParams.restrictedAreaEnabled && restrictedParams) {\n                    // Check for the letter boundary\n                    if (restrictedParams.letter) {\n                        const ctx = canvas.getContext('2d');\n                        if (ctx) {\n                            const letterCenterX = restrictedParams.x + restrictedParams.size / 2;\n                            const letterCenterY = restrictedParams.y + restrictedParams.size / 2;\n                            // Check if the point is inside the letter's actual shape\n                            const isInLetterShape = (0,_blob_simulation_utils__WEBPACK_IMPORTED_MODULE_6__.isPointInLetter)(ctx, restrictedParams.letter, letterCenterX, letterCenterY, restrictedParams.size, x, y);\n                            if (isInLetterShape) {\n                                console.warn(\"Cannot add shape: inside letter shape.\");\n                                return;\n                            }\n                            // Still check the margin around the letter\n                            const raMinX = restrictedParams.x - restrictedParams.margin;\n                            const raMaxX = restrictedParams.x + restrictedParams.size + restrictedParams.margin;\n                            const raMinY = restrictedParams.y - restrictedParams.margin;\n                            const raMaxY = restrictedParams.y + restrictedParams.size + restrictedParams.margin;\n                            if (x >= raMinX && x <= raMaxX && y >= raMinY && y <= raMaxY) {\n                            // The point is within the margin boundary, but we already checked if it's in the letter shape\n                            // So this is the margin area around the letter, not the letter itself\n                            // You can decide if you want to allow blob placement in this area or not\n                            }\n                        }\n                    } else {\n                        // Fallback to rectangular check if letter property is not available\n                        const raMinX = restrictedParams.x - restrictedParams.margin;\n                        const raMaxX = restrictedParams.x + restrictedParams.size + restrictedParams.margin;\n                        const raMinY = restrictedParams.y - restrictedParams.margin;\n                        const raMaxY = restrictedParams.y + restrictedParams.size + restrictedParams.margin;\n                        if (x >= raMinX && x <= raMaxX && y >= raMinY && y <= raMaxY) {\n                            console.warn(\"Cannot add shape: inside restricted area.\");\n                            return;\n                        }\n                    }\n                }\n                const newBlob = new _blob_simulation_blob__WEBPACK_IMPORTED_MODULE_5__.Blob(x, y, edgePointCount, minBlobSize, repelDistance);\n                blobsRef.current.push(newBlob);\n                console.log(\"Added new blob at \".concat(x.toFixed(1), \", \").concat(y.toFixed(1)));\n            } else if (toolMode === 'remove') {\n                let removedCount = 0;\n                blobsRef.current = blobsRef.current.filter((blob)=>{\n                    if (!blob || !blob.centre || typeof blob.maxRadius === 'undefined') return true;\n                    const distSq = blob.centre.distanceToSquared(new three__WEBPACK_IMPORTED_MODULE_7__.Vector2(x, y));\n                    if (distSq <= blob.maxRadius * blob.maxRadius) {\n                        removedCount++;\n                        return false;\n                    }\n                    return true;\n                });\n                console.log(\"Removed \".concat(removedCount, \" blob(s) near \").concat(x.toFixed(1), \", \").concat(y.toFixed(1)));\n            }\n            setSimulationParams((prev)=>({\n                    ...prev,\n                    toolMode: null\n                }));\n            draw();\n        } catch (error) {\n            console.error(\"Error handling canvas click:\", error);\n        }\n    };\n    // If component is not mounted yet, render a placeholder to avoid hydration mismatch\n    if (!isMounted) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex flex-col lg:flex-row gap-6 items-start p-4 md:p-6\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"relative w-full max-w-[512px] aspect-square flex-shrink-0 mx-auto lg:mx-0\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full h-full rounded-lg bg-neutral-100 dark:bg-neutral-800 flex items-center justify-center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-neutral-400\",\n                            children: \"Loading simulation...\"\n                        }, void 0, false, {\n                            fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                            lineNumber: 721,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                        lineNumber: 720,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                    lineNumber: 719,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"w-full max-w-[320px] h-[500px] bg-neutral-100 dark:bg-neutral-800 rounded-lg\"\n                }, void 0, false, {\n                    fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                    lineNumber: 724,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n            lineNumber: 718,\n            columnNumber: 7\n        }, this);\n    }\n    // --- JSX ---\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col lg:flex-row gap-6 items-start p-4 md:p-6\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative w-full max-w-[512px] aspect-square flex-shrink-0 mx-auto lg:mx-0\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                        ref: canvasRef,\n                        onClick: handleCanvasClick,\n                        className: \"block rounded-lg w-full h-full border border-neutral-300 dark:border-neutral-700 \".concat(simulationParams.toolMode ? 'cursor-crosshair' : 'cursor-default'),\n                        style: {\n                            backgroundColor: currentTheme === 'dark' ? simulationParams.darkBackgroundColor : simulationParams.backgroundColor\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                        lineNumber: 735,\n                        columnNumber: 9\n                    }, this),\n                    isLiveEditing && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"absolute top-2 right-2 bg-black/60 text-white px-2 py-1 rounded-md text-xs\",\n                        children: \"Updating...\"\n                    }, void 0, false, {\n                        fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                        lineNumber: 743,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"absolute bottom-3 left-3 right-3 flex justify-between items-center pointer-events-none\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                variant: \"outline\",\n                                size: \"icon\",\n                                onClick: toggleAnimation,\n                                className: \"bg-black/40 text-white hover:bg-black/60 border-none rounded-full pointer-events-auto\",\n                                \"aria-label\": isAnimating ? 'Pause simulation' : 'Play simulation',\n                                children: isAnimating ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Download_Eraser_Pause_Play_Plus_lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                    className: \"w-5 h-5\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                                    lineNumber: 757,\n                                    columnNumber: 28\n                                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Download_Eraser_Pause_Play_Plus_lucide_react__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                    className: \"w-5 h-5\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                                    lineNumber: 757,\n                                    columnNumber: 60\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                                lineNumber: 750,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex gap-2 pointer-events-auto\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                        variant: \"outline\",\n                                        size: \"icon\",\n                                        onClick: ()=>setSimulationParams((prev)=>({\n                                                    ...prev,\n                                                    toolMode: prev.toolMode === 'add' ? null : 'add'\n                                                })),\n                                        className: \"bg-black/40 text-white hover:bg-black/60 border-none rounded-full \".concat(simulationParams.toolMode === 'add' ? 'ring-2 ring-white' : ''),\n                                        \"aria-label\": \"Add Shape Tool\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Download_Eraser_Pause_Play_Plus_lucide_react__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                            className: \"w-5 h-5\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                                            lineNumber: 772,\n                                            columnNumber: 15\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                                        lineNumber: 762,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                        variant: \"outline\",\n                                        size: \"icon\",\n                                        onClick: ()=>setSimulationParams((prev)=>({\n                                                    ...prev,\n                                                    toolMode: prev.toolMode === 'remove' ? null : 'remove'\n                                                })),\n                                        className: \"bg-black/40 text-white hover:bg-black/60 border-none rounded-full \".concat(simulationParams.toolMode === 'remove' ? 'ring-2 ring-white' : ''),\n                                        \"aria-label\": \"Remove Shape Tool\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Download_Eraser_Pause_Play_Plus_lucide_react__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                                            className: \"w-5 h-5\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                                            lineNumber: 784,\n                                            columnNumber: 15\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                                        lineNumber: 774,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                                lineNumber: 761,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                variant: \"outline\",\n                                size: \"icon\",\n                                onClick: downloadSVG,\n                                className: \"bg-black/40 text-white hover:bg-black/60 border-none rounded-full pointer-events-auto\",\n                                \"aria-label\": \"Download as SVG\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Download_Eraser_Pause_Play_Plus_lucide_react__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                                    className: \"w-5 h-5\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                                    lineNumber: 796,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                                lineNumber: 789,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                        lineNumber: 748,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                lineNumber: 733,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_blob_simulation_simulation_controls__WEBPACK_IMPORTED_MODULE_4__.SimulationControls, {\n                params: simulationParams,\n                onParamChange: handleParamChange,\n                onRestart: handleRestart,\n                isAnimating: isAnimating\n            }, void 0, false, {\n                fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n                lineNumber: 802,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/daniel/Developer/emarocks/components/blob-simulation.tsx\",\n        lineNumber: 731,\n        columnNumber: 5\n    }, this);\n}\n_s(BlobSimulation, \"XFeKBpOXe1GsPckqPRxRuMT1oQ0=\", false, function() {\n    return [\n        next_themes__WEBPACK_IMPORTED_MODULE_3__.useTheme\n    ];\n});\n_c = BlobSimulation;\nvar _c;\n$RefreshReg$(_c, \"BlobSimulation\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/blob-simulation.tsx\n"));

/***/ })

});